
" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
		    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
			     \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
 autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
   \| PlugInstall --sync | source $MYVIMRC
   \| endif


" Plugins add using vim-Plug

call plug#begin()

Plug 'preservim/nerdtree'
Plug 'itchyny/lightline.vim'
Plug 'morhetz/gruvbox'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'vim-scripts/vim-gitgutter'
Plug 'ryanoasis/vim-devicons'
Plug 'mhinz/vim-startify'
Plug 'voldikss/vim-floaterm'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'drzel/vim-line-no-indicator'
Plug 'hrsh7th/vim-vsnip'							
Plug 'hrsh7th/vim-vsnip-integ'						

call plug#end()



" =============================================================================
" LIGHTLINE AND LIGHTLINE-BUFFERLINE
" =============================================================================
let g:lightline#bufferline#show_number=1
let g:lightline#bufferline#enable_devicons=1
" mostrar siempre la barra de buffers, incluso con un solo buffer
let g:lightline#bufferline#show_single_buffer=1

let g:lightline = {
    \ 'colorscheme' : 'gruvbox',
    \ 'active' : {
    \   'left' : [ [ 'mode', 'paste'],
    \ 		       [ 'gitbranch','readonly', 'filename']],
    \   'right' :  [ ['lineinfo'],
    \              [ 'linenoindicator' ],
    \              [ 'fileformat' ],
    \              [ 'fileencoding' ],
    \              [ 'filetype' ]]
    \ },
    \ 'component_function' : {
    \   'filetype': 'MyFiletype',
    \   'fileformat': 'MyFileformat',
    \   'filename': 'LightlineFilename',
    \   'readonly': 'LightLineReadonly',
    \   'linenoindicator'  : 'LineNoIndicator',
    \   'mode'  : 'LightlineMode',
    \ },
    \ 'component_expand': {
    \   'buffers': 'lightline#bufferline#buffers',
    \ },
    \ 'component_type': {
    \   'buffers': 'tabsel',
	 \ },
    \ 'tabline': {
	 \   'left': [ ['buffers'] ],
    \   'right': [['currentfunction']]
	 \ }
    \ }


" Function
function! LightlineMode()
  return lightline#mode()
endfunction

function! MyFiletype()
  return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() : 'no ft') : ''
endfunction

function! MyFileformat()
  return winwidth(0) > 70 ? (&fileformat . ' ' . WebDevIconsGetFileFormatSymbol()) : ''
endfunction

function! LightlineFilename()
  let modified = &modified ? '+' : ''
  let root = fnamemodify(get(b:, 'git_dir'), ':h')
  let path = expand('%:p')
  if path[:len(root)-1] ==# root
    return path[len(root)+1:] . modified
  endif
  return expand('%') . modified
endfunction

function! LightLineReadonly()
  if &filetype == "help"
    return ""
  elseif &readonly
    return ""
  else
    return ""
  endif
endfunction


"aa	


autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update() 	 

"=============Custom Keybinds==============
map <silent>  <F6> :NERDTreeToggle<CR>
nmap <C-r> :NERDTreeRefreshRoot<CR>
map <C-t> :belowright terminal<CR>
nnoremap   <silent>        <F5>    :FloatermToggle<CR>
tnoremap   <silent>        <F5>    <C-\><C-n>:FloatermToggle<CR>


"==============Startify====================
"let g:startify_change_to_dir = 1 " when opening a file or bookmark, change to its directory

let g:webdevicons_enable_startify = 1					"Support dev icons in startify
let g:startify_padding_left = 3							" Padding left
let g:startify_session_delete_buffers = 1				" Clean buffers
let g:startify_relative_path = 1
let g:startify_files_number = 6


let g:startify_bookmarks = [
      \ {'b': '~/.bashrc'},
      \ {'v': '~/.vim/vimrc'},
      \ ]


let g:startify_lists = [
      \ { 'type': 'bookmarks', 'header': ["  bookmarks"]      },
      \ { 'type': 'files',     'header': ["  mru files"]            },
      \ { 'type': 'dir',       'header': ["  mru files in " . getcwd()] },
      \ { 'type': 'commands',  'header': ["  commands"]       },
      \ ]

"----show wevdevicons-----"
function! Startifyentryformat()
  return 'webdeviconsgetfiletypesymbol(absolute_path) ." ". entry_path'
endfunction

"=========================

colorscheme gruvbox
set background=dark
 if exists('+termguicolors')
      let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
      let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      set termguicolors
    endif
"=========================================
"|        configs                       |
"=========================================
set undodir=~/.vim/undodir	"define el path para permitir crear persistencia de `uu` aun si cerramos la sesion
set undofile					"esto habilita lo de arriba
set nobackup					"deshabilita los backups
set autoindent
set number						"muesta los numeros en linea
set noswapfile					"deshabilita los swamp files de vim
set encoding=utf-8			"definir el tipo de encoding             
set autoread					"pemite autoleer los cambios en vim si fueron hechos de manera externa
set laststatus=2				
set noshowmode					"elimina el texto del modo actual que se encuentra debajo del ligthline
set fileformat=unix			"define que el formato de archivo sera de unix
set tabstop=3					"numero de espacios al hacer <tab>			
set relativenumber			"muestra el numero relativo en la barra de la linea actual
"set noesckeys					"Deshabilita la latencia al momento de presionar esc
set hidden						"permite mantener un buffer abierto en segundo plano, a pesar de cambiar a otro
set showmatch					"resalta los [], {}, () que son pares
set hlsearch					"resalta los resultados de la busqueda hecha con :/busqueda
set smartcase					"permite que solo sea case sensitive si en la busqueda especificamos una mayuscula :/busqueda 	
set title						"muestra el path y el nombre del buffer actual en la barra superios de la consola
set showtabline=2				"habilita esta opcion para mostrar el ligthline y ligthline-buffer
set cursorcolumn				"habilita el resaltado de columna(similar al cursorline)
set cursorline					"muestra una linea en el cursor
set fillchars+=vert:│  		" Define el simbolo de bordeado de los separadores verticales

"move to file directory when vim is launched
autocmd bufenter * if &buftype == '' | silent! lcd %:p:h | endif


"-------------------

" configurar updatetime para cursorhold events
set updatetime=1000

" autocomandos para checktime
augroup autoread
  autocmd!
  autocmd cursorhold,cursorholdi * checktime
  autocmd focusgained,bufenter * checktime
augroup end
"========================================
"		new settings		
"========================================


" ============================================================================
" floaterm
" =============================================================================
let g:floaterm_autoclose = 2
let g:floaterm_title = ' -> $1..$2'
"let g:floaterm_giteditor = 0


